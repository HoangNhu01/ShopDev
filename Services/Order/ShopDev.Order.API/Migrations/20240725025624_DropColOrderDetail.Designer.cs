// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ShopDev.Order.Infrastructure.Persistence;

#nullable disable

namespace ShopDev.Order.API.Migrations
{
    [DbContext(typeof(OrderDbContext))]
    [Migration("20240725025624_DropColOrderDetail")]
    partial class DropColOrderDetail
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("sd_order")
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ShopDev.InfrastructureBase.Persistence.OutBox.OutboxMessage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Error")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Event")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("OccurredOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ProcessedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "ProcessedOnUtc" }, "IX_OutboxMessage");

                    b.ToTable("OutboxMessage", "sd_order");
                });

            modelBuilder.Entity("ShopDev.Order.Domain.Order.OrderDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("StockStatus")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex(new[] { "ProductId", "Deleted" }, "IX_OrderDetail")
                        .IsDescending();

                    b.ToTable("OrderDetail", "sd_order");
                });

            modelBuilder.Entity("ShopDev.Order.Domain.Order.OrderGen", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("9c1e825a-9280-47cc-a5b0-5d0aa62a645b"));

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PaymentStatus")
                        .HasColumnType("int");

                    b.Property<string>("ShipAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShipEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShipName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ShipPhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<double>("TotalPrice")
                        .HasColumnType("float");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "OrderDate", "UserId", "Deleted", "ShipName", "PaymentStatus", "Status" }, "IX_OrderGen")
                        .IsDescending();

                    b.ToTable("OrderGen", "sd_order");
                });

            modelBuilder.Entity("ShopDev.Order.Domain.Shipment.OrderProcess", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ProcessStatus")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("WarehouseName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex(new[] { "WarehouseName", "ProcessStatus" }, "IX_OrderProcess")
                        .IsDescending();

                    b.ToTable("OrderProcess", "sd_order");
                });

            modelBuilder.Entity("ShopDev.Order.Domain.Order.OrderDetail", b =>
                {
                    b.HasOne("ShopDev.Order.Domain.Order.OrderGen", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("ShopDev.Order.Domain.Products.Product", "Product", b1 =>
                        {
                            b1.Property<int>("OrderDetailId")
                                .HasColumnType("int");

                            b1.Property<int>("Id")
                                .HasColumnType("int");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<double>("Price")
                                .HasColumnType("float");

                            b1.Property<int>("Quantity")
                                .HasColumnType("int");

                            b1.Property<int>("ShopId")
                                .HasColumnType("int");

                            b1.Property<string>("ThumbUri")
                                .IsRequired()
                                .IsUnicode(false)
                                .HasColumnType("varchar(max)");

                            b1.Property<string>("Title")
                                .IsRequired()
                                .HasMaxLength(255)
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("OrderDetailId");

                            b1.ToTable("OrderDetail", "sd_order");

                            b1.ToJson("Product");

                            b1.WithOwner()
                                .HasForeignKey("OrderDetailId");

                            b1.OwnsMany("ShopDev.Order.Domain.Products.Spu", "Spus", b2 =>
                                {
                                    b2.Property<int>("ProductOrderDetailId")
                                        .HasColumnType("int");

                                    b2.Property<int>("SpuId")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("int");

                                    b2.Property<string>("Name")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<string>("Options")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.HasKey("ProductOrderDetailId", "SpuId");

                                    b2.ToTable("OrderDetail", "sd_order");

                                    b2.ToJson("Spus");

                                    b2.WithOwner()
                                        .HasForeignKey("ProductOrderDetailId");
                                });

                            b1.Navigation("Spus");
                        });

                    b.Navigation("Order");

                    b.Navigation("Product")
                        .IsRequired();
                });

            modelBuilder.Entity("ShopDev.Order.Domain.Shipment.OrderProcess", b =>
                {
                    b.HasOne("ShopDev.Order.Domain.Order.OrderGen", "Order")
                        .WithMany("OrderProcesses")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("ShopDev.Order.Domain.Order.OrderGen", b =>
                {
                    b.Navigation("OrderDetails");

                    b.Navigation("OrderProcesses");
                });
#pragma warning restore 612, 618
        }
    }
}
